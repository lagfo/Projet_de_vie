kotlin version: 2.0.21
error message: java.lang.OutOfMemoryError: Java heap space
	at org.jetbrains.kotlin.incremental.storage.ProtoMapValueExternalizer.read(externalizers.kt:138)
	at org.jetbrains.kotlin.incremental.storage.ProtoMapValueExternalizer.read(externalizers.kt:120)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.doGet(PersistentMapImpl.java:680)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.get(PersistentMapImpl.java:613)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.get(PersistentHashMap.java:196)
	at org.jetbrains.kotlin.incremental.storage.LazyStorage.get(LazyStorage.kt:76)
	at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.get(InMemoryStorage.kt:68)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCache$ProtoMap.get(IncrementalJvmCache.kt:400)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCache.getModuleMappingData(IncrementalJvmCache.kt:343)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.moduleMappings_delegate$lambda$3(IncrementalPackagePartProvider.kt:43)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider$$Lambda/0x00000001007e5de8.invoke(Unknown Source)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.getModuleMappings(IncrementalPackagePartProvider.kt:41)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.getAllOptionalAnnotationClasses(IncrementalPackagePartProvider.kt:69)
	at org.jetbrains.kotlin.fir.java.deserialization.OptionalAnnotationClassesProvider.optionalAnnotationClassesAndPackages_delegate$lambda$0(OptionalAnnotationClassesProvider.kt:38)
	at org.jetbrains.kotlin.fir.java.deserialization.OptionalAnnotationClassesProvider$$Lambda/0x0000000100a74350.invoke(Unknown Source)
	at kotlin.SafePublicationLazyImpl.getValue(LazyJVM.kt:107)
	at org.jetbrains.kotlin.fir.java.deserialization.OptionalAnnotationClassesProvider.getOptionalAnnotationClassesAndPackages(OptionalAnnotationClassesProvider.kt:34)
	at org.jetbrains.kotlin.fir.java.deserialization.OptionalAnnotationClassesProvider.getPackage(OptionalAnnotationClassesProvider.kt:86)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider.computePackage(FirCachingCompositeSymbolProvider.kt:144)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider.access$computePackage(FirCachingCompositeSymbolProvider.kt:27)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider$special$$inlined$createCache$5.invoke(FirCachesFactory.kt:73)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider$special$$inlined$createCache$5.invoke(FirCachesFactory.kt:71)
	at org.jetbrains.kotlin.fir.caches.FirThreadUnsafeCache.getValue(FirThreadUnsafeCachesFactory.kt:40)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider.getPackage(FirCachingCompositeSymbolProvider.kt:173)
	at org.jetbrains.kotlin.fir.resolve.transformers.ImportUtilsKt.findLongestExistingPackage(ImportUtils.kt:30)
	at org.jetbrains.kotlin.fir.resolve.transformers.FirImportResolveTransformer.transformImportForFqName(FirImportResolveTransformer.kt:71)
	at org.jetbrains.kotlin.fir.resolve.transformers.FirImportResolveTransformer.transformImport(FirImportResolveTransformer.kt:64)
	at org.jetbrains.kotlin.fir.declarations.FirImport.transform(FirImport.kt:34)
	at org.jetbrains.kotlin.fir.visitors.FirTransformerUtilKt.transformInplace(FirTransformerUtil.kt:20)
	at org.jetbrains.kotlin.fir.declarations.impl.FirFileImpl.transformImports(FirFileImpl.kt:75)
	at org.jetbrains.kotlin.fir.declarations.impl.FirFileImpl.transformChildren(FirFileImpl.kt:64)


